{
  "name": "neptunik",
  "private": true,
  "version": "1.0.0",
  "type": "module",
  "packageManager": "pnpm@10.14.0",
  "engines": {
    "node": ">=18.17.0",
    "pnpm": ">=10.0.0"
  },
  "description": "Neptunik - Automatiza WhatsApp para tu negocio",
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "NODE_OPTIONS='--max-old-space-size=8192' next build",
    "build:analyze": "ANALYZE=true npm run build",
    "build:analyze:webpack": "ANALYZE=true TURBOPACK=0 npm run build",
    "bundle:analyze": "npx @next/bundle-analyzer .next",
    "bundle:size": "npx bundlesize",
    "start": "next start",
    "start:turbo": "next start --turbopack",
    "turbo:analyze": "NODE_OPTIONS='--max-old-space-size=8192' next build --turbopack --experimental-debug",
    "turbo:bundle-stats": "NODE_OPTIONS='--max-old-space-size=8192' next build --turbopack && npx webpack-bundle-analyzer .next/static/chunks/*.js",
    "clean:cache": "npx rimraf .next node_modules/.cache .turbo playwright-report test-results",
    "clean:all": "npm run clean:cache && npx rimraf node_modules package-lock.json && npm install",
    "clean:deep": "npm run clean:all && npm run build",
    "dev:windows": "set NODE_OPTIONS=--max-old-space-size=8192 --max-semi-space-size=128 --gc-interval=100 && set NEXT_TELEMETRY_DISABLED=1 && set UV_THREADPOOL_SIZE=12 && next dev --turbopack",
    "dev:clean:windows": "npm run clean:cache && npm run dev:windows",
    "health:check": "node --version && npm --version && npx next --version",
    "health:memory": "node -e \"console.log('Memory:', Math.round(process.memoryUsage().heapUsed / 1024 / 1024) + 'MB')\"",
    "lint": "next lint --fix",
    "lint:strict": "next lint --max-warnings 0",
    "type-check": "tsc --noEmit --incremental",
    "test": "jest --passWithNoTests",
    "test:watch": "jest --watch --passWithNoTests",
    "test:coverage": "jest --coverage --passWithNoTests",
    "test:ui": "jest --watch --verbose --passWithNoTests",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:onboarding": "playwright test onboarding-flow.spec.ts",
    "test:e2e:lead-capture": "playwright test lead-capture.spec.ts",
    "test:e2e:mobile": "playwright test mobile-responsiveness.spec.ts",
    "test:e2e:accessibility": "playwright test accessibility.spec.ts",
    "test:e2e:visual": "playwright test visual-regression.spec.ts",
    "test:e2e:performance": "playwright test performance.spec.ts",
    "test:e2e:critical": "playwright test onboarding-flow.spec.ts lead-capture.spec.ts",
    "test:e2e:chromium": "playwright test --project=chromium",
    "test:e2e:mobile-only": "playwright test --project='Mobile Chrome' --project='Mobile Safari'",
    "test:e2e:desktop": "playwright test --project=chromium --project=firefox --project=webkit",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:slow": "playwright test --project=slow-network",
    "test:e2e:report": "playwright show-report",
    "test:component": "jest --testPathPattern=ui --passWithNoTests",
    "test:domain": "jest --testPathPattern=domain --passWithNoTests",
    "test:integration": "TEST_LEVEL=integration jest --testPathPattern=integration --passWithNoTests",
    "test:unit": "TEST_LEVEL=unit jest --testPathIgnorePatterns=integration --passWithNoTests",
    "test:supabase": "TEST_LEVEL=integration jest --testPathPattern=supabase --passWithNoTests",
    "test:performance": "jest --testNamePattern=\"Performance Tests\" --passWithNoTests",
    "test:performance:load": "k6 run performance/load-tests/api-endpoints.js",
    "test:performance:stress": "k6 run performance/load-tests/stress-test.js",
    "test:performance:lighthouse": "node performance/lighthouse-ci/lighthouse-runner.js",
    "test:performance:memory": "node performance/memory-profiling/memory-profiler.js",
    "test:performance:bundle": "node performance/bundle-analysis/bundle-analyzer.js",
    "test:performance:database": "jest --testPathPattern=performance/database-tests --passWithNoTests",
    "test:performance:realtime": "jest --testPathPattern=performance/real-time-tests --passWithNoTests",
    "test:performance:regression": "node performance/regression-detection/performance-regression-detector.js",
    "test:performance:dashboard": "node performance/monitoring/performance-dashboard.js",
    "test:performance:runner": "node performance/test-runner.js",
    "test:performance:full": "node performance/test-runner.js full",
    "test:performance:essential": "node performance/test-runner.js essential",
    "test:navbar": "./scripts/test-navbar.sh",
    "test:navbar:e2e": "./scripts/test-navbar.sh --e2e-only",
    "test:navbar:performance": "./scripts/test-navbar.sh --performance-only",
    "test:navbar:lighthouse": "./scripts/test-navbar.sh --lighthouse-only",
    "test:navbar:quick": "./scripts/test-navbar.sh --quick",
    "test:navbar:mobile": "playwright test e2e/navbar-mobile.spec.ts",
    "test:navbar:accessibility": "playwright test e2e/navbar-accessibility.spec.ts",
    "test:navbar:cross-browser": "playwright test e2e/navbar-e2e.spec.ts --project=chromium --project=firefox --project=webkit",
    "lighthouse:navbar": "lhci autorun --config=.lighthouserc.js",
    "lighthouse:navbar:mobile": "LHCI_BUILD_CONTEXT__CURRENT_BRANCH=mobile lhci autorun --config=.lighthouserc.js",
    "test:performance:quick": "node performance/test-runner.js quick",
    "test:performance:ci": "node performance/test-runner.js ci",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:ci": "npm run lint:strict && npm run type-check && npm run test:coverage && npm run test:e2e",
    "test:coverage:detailed": "jest --coverage --passWithNoTests && node -e \"require('./src/__mocks__/test-utils/coverage-reporter').generateAllReports()\"",
    "test:coverage:check": "node -e \"require('./src/__mocks__/test-utils/coverage-reporter').quickCoverageCheck()\"",
    "supabase:types": "supabase gen types typescript --local > src/lib/supabase/types.ts",
    "supabase:types:remote": "supabase gen types typescript --project-id $SUPABASE_PROJECT_ID > src/lib/supabase/types.ts",
    "supabase:start": "supabase start",
    "supabase:stop": "supabase stop",
    "supabase:reset": "supabase db reset",
    "supabase:status": "supabase status",
    "dev:local": "NODE_ENV=development next dev --turbopack",
    "db:seed": "supabase db seed",
    "db:reset": "supabase db reset && supabase db seed",
    "db:push": "supabase db push",
    "db:migrate": "supabase migration new",
    "supabase:link": "supabase link --project-ref $SUPABASE_PROJECT_ID",
    "local:setup": "supabase start && pnpm supabase:types && echo 'âœ… Local environment ready!'",
    "local:teardown": "supabase stop --backup",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org the-kroko-company --project neptunik ./dist",
    "sentry:release": "sentry-cli releases new -p neptunik $(git rev-parse --short HEAD)",
    "sentry:finalize": "sentry-cli releases finalize $(git rev-parse --short HEAD)",
    "sentry:deploy": "npm run sentry:release && npm run build && npm run sentry:sourcemaps && npm run sentry:finalize"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@hookform/resolvers": "^5.2.1",
    "@next/third-parties": "^15.1.3",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.14",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@reduxjs/toolkit": "^2.8.2",
    "@sentry/nextjs": "^10.1.0",
    "@sentry/replay": "^7.116.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.52.1",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "framer-motion": "^12.23.12",
    "lucide-react": "^0.542.0",
    "next": "^15.5.2",
    "next-themes": "^0.4.6",
    "posthog-js": "^1.261.6",
    "posthog-node": "^5.8.1",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-error-boundary": "^6.0.0",
    "react-hook-form": "^7.62.0",
    "react-redux": "^9.2.0",
    "rxjs": "^7.8.2",
    "sonner": "^2.0.7",
    "tailwind-merge": "^3.3.1",
    "web-vitals": "^5.1.0",
    "zod": "^4.1.5"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.9.0",
    "@next/eslint-plugin-next": "^15.4.6",
    "@playwright/test": "^1.48.0",
    "@sentry/profiling-node": "^10.10.0",
    "@testing-library/jest-dom": "^6.5.0",
    "@testing-library/react": "^16.0.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/jest": "^29.5.14",
    "@types/node": "24.3.0",
    "@types/react": "19.1.12",
    "autoprefixer": "^10.4.21",
    "axe-playwright": "^2.1.0",
    "dotenv": "^17.2.2",
    "eslint": "^9.9.0",
    "eslint-config-next": "^15.4.6",
    "eslint-config-prettier": "^10.1.8",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-next": "^0.0.0",
    "eslint-plugin-prettier": "^5.5.3",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.9",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lighthouse": "^12.2.1",
    "postcss": "^8.4.31",
    "prettier": "^3.5.3",
    "puppeteer": "^24.17.1",
    "rimraf": "^6.0.1",
    "tailwindcss": "^3.4.17",
    "typescript": "5.9.2"
  }
}